
# Copyright 2023 SECO Mind Srl
# SPDX-License-Identifier: Apache-2.0

name: elixir-setup

on:
  workflow_call:

env:
  MIX_ENV: test

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: "${{ runner.os }}-\
                otp-${{ steps.beam.outputs.otp-version }}-\
                elixir-${{ steps.beam.outputs.elixir-version }}-\
                ${{ hashFiles('mix.lock') }}"
      - name: Fetch and compile dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          mix deps.get --only test
          mix local.rebar --force
          mix deps.compile
  test:
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: "${{ runner.os }}-\
                otp-${{ steps.beam.outputs.otp-version }}-\
                elixir-${{ steps.beam.outputs.elixir-version }}-\
                ${{ hashFiles('mix.lock') }}"
      - name: Run tests
        run: mix test
  formatting:
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: "${{ runner.os }}-\
                otp-${{ steps.beam.outputs.otp-version }}-\
                elixir-${{ steps.beam.outputs.elixir-version }}-\
                ${{ hashFiles('mix.lock') }}"
      - name: Check formatting
        run: mix format --check-formatted
  dialyzer:
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          version-file: .tool-versions
          version-type: strict
      - name: Restore dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: "${{ runner.os }}-\
                otp-${{ steps.beam.outputs.otp-version }}-\
                elixir-${{ steps.beam.outputs.elixir-version }}-\
                ${{ hashFiles('mix.lock') }}"
      - name: Cache Dialyzer's PLT
        uses: actions/cache/restore@v3
        id: plt_cache
        with:
          key: "${{ runner.os }}-\
                otp-${{ steps.beam.outputs.otp-version }}-\
                elixir-${{ steps.beam.outputs.elixir-version }}-\
                dialyzer-plt"
          path: priv/plts
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt
      - name: Save PLT cache
        uses: actions/cache/save@v3
        if: steps.plt_cache.outputs.cache-hit != 'true'
        id: plt_cache_save
        with:
          key: "${{ steps.plt_cache.outputs.cache-primary-key }}"
          path: priv/plts
      - name: Run dialyzer
        run: mix dialyzer --format github
